#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.12.99a0 - bin/nu_os_install
#
# Copyright (c) 2008-2022 Chad Jacob Milios and Crop Circle Systems.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Simplified BSD License.
# If a copy of the Simplified BSD License was not distributed alongside this file, you can
# obtain one at https://www.freebsd.org/copyright/freebsd-license.html . This software
# project is not affiliated with the FreeBSD Project.
#
# Official updates and community support available at https://nuos.org .
# Professional services available at https://ccsys.com .

NUOS_VER=0.0.12.99a0

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"

while getopts c:di:o:p:P:qv OPT; do case $OPT in
	c) PKG_COLLECTION=$OPTARG;;
	d) OPT_DEVELOPER=y;;
	i) INPUT=$OPTARG;;
	o) OUTPUT=$OPTARG;;
	p) POOL_NAME=$OPTARG;;
	P) SOURCE_POOL=$OPTARG;;
	q) OPT_QUICK=y;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]
[ -z "${INPUT-}" -o -z "${OUTPUT-}" ] || error 11 'innappropriate to specify input file with output file'

load_lib nu_admin nu_make nu_ports nu_collection nu_install

baseos_init
nuos_init
make_vars_init
collection_vars_init

if canhas ${INPUT-}; then
	echo 'input file      -i INPUT          ' $INPUT
else
	echo 'source pool     -P SOURCE_POOL    ' ${SOURCE_POOL:=$POOL_BOOT_NAME}
fi

if canhas ${OUTPUT-}; then
	echo 'output file     -o OUTPUT         ' $OUTPUT
else
	echo 'target pool     -p POOL_NAME      ' $POOL_NAME
fi

[ "${SOURCE_POOL-}" != "${POOL_NAME-}" ] || error 11 'source and destination cannot be the same'

maybe_pause
maybe_yell

os_software_ds_name=os

set_dss () {
	fbsd_proj_ds_name=$os_software_ds_name/$BASEOS_TYPE
	fbsd_os_ds_name=$fbsd_proj_ds_name/$BASEOS_VER
	fbsd_bin_ds_name=$fbsd_os_ds_name/$TRGT
	nuos_proj_ds_name=$os_software_ds_name/nuOS
	nuos_os_ds_name=$nuos_proj_ds_name/$NUOS_VER
	nuos_bin_ds_name=$nuos_os_ds_name/$TRGT
}

set_dss

if canhas ${INPUT-}; then
	require_tmp restore_log
	sister nu_restore -t $POOL_NAME < "$INPUT" | tee -a "$restore_log"
	{
		read -r BASEOS_TYPE
		read -r BASEOS_VER
		read -r TRGT
		read -r NUOS_VER
		read -r rev
		rev=${rev%@*}
	} <<EOF
$(awk "\$1 ~ /^$POOL_NAME\/$os_software_ds_name\// && \$2 == \"->\" {print \$0; exit}" < "$restore_log" | cut -d / -f 3,4,5,9,11 | tr / '\n')
EOF
		set_dss
else
	rev=`zfs get -H -p -o value org.nuos:active_revision $SOURCE_POOL/$nuos_bin_ds_name`
fi

nuos_sysroot_source_ds=$nuos_bin_ds_name/$rev

spill BASEOS_TYPE BASEOS_VER TRGT NUOS_VER nuos_sysroot_source_ds

push DATASETS $nuos_sysroot_source_ds@$PKG_COLLECTION \
	${OPT_DEVELOPER:+$fbsd_proj_ds_name/src} \
	${OPT_DEVELOPER:+$fbsd_proj_ds_name/ports/src} \
	${OPT_DEVELOPER:+$nuos_bin_ds_name/pkg}

if canhas ${OUTPUT-}; then
	sister nu_backup -p $SOURCE_POOL $DATASETS > "$OUTPUT"
	echo "Saved installation zstream."
	exit
elif ! canhas ${INPUT-}; then
	sister nu_backup -p $SOURCE_POOL $DATASETS | sister nu_restore -t $POOL_NAME
fi

zfs create -p -o setuid=off -o mountpoint=none -o canmount=off $POOL_NAME/$fbsd_proj_ds_name/src
zfs create -o mountpoint=/usr/src $POOL_NAME/$fbsd_proj_ds_name/src/$BASEOS_VER && \
	zfs unmount $POOL_NAME/$fbsd_proj_ds_name/src/$BASEOS_VER || true
zfs create -p -o mountpoint=none -o canmount=off $POOL_NAME/$fbsd_proj_ds_name/src/obj
zfs create -p -o mountpoint=none -o canmount=off $POOL_NAME/$fbsd_proj_ds_name/src/obj/$TRGT_CODE
zfs create -o mountpoint=/usr/obj $POOL_NAME/$fbsd_proj_ds_name/src/obj/$TRGT_CODE/$BASEOS_VER && \
	zfs unmount $POOL_NAME/$fbsd_proj_ds_name/src/obj/$TRGT_CODE/$BASEOS_VER || true
zfs create -p -o setuid=off -o mountpoint=none -o canmount=off $POOL_NAME/$fbsd_proj_ds_name/ports
zfs create -o exec=off -o mountpoint=/var/db/portsnap $POOL_NAME/$fbsd_proj_ds_name/ports/snap-db && \
	zfs unmount $POOL_NAME/$fbsd_proj_ds_name/ports/snap-db || true
zfs create -o mountpoint=/usr/ports $POOL_NAME/$fbsd_proj_ds_name/ports/src && \
	zfs unmount $POOL_NAME/$fbsd_proj_ds_name/ports/src || true
zfs create -o exec=off -o mountpoint=/usr/ports/distfiles $POOL_NAME/$fbsd_proj_ds_name/ports/distfiles && \
	zfs unmount $POOL_NAME/$fbsd_proj_ds_name/ports/distfiles || true
zfs create -o setuid=off -o exec=off -o mountpoint=/usr/ports/packages $POOL_NAME/$nuos_bin_ds_name/pkg && \
	zfs unmount $POOL_NAME/$nuos_bin_ds_name/pkg || true

export BASEOS_TYPE BASEOS_VER
sister nu_build -FN -p $POOL_NAME -c $PKG_COLLECTION -q
