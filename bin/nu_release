#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.12.99a0 - bin/nu_release
#
# Copyright (c) 2008-2022 Chad Jacob Milios and Crop Circle Systems.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Simplified BSD License.
# If a copy of the Simplified BSD License was not distributed alongside this file, you can
# obtain one at https://www.freebsd.org/copyright/freebsd-license.html . This software
# project is not affiliated with the FreeBSD Project.
#
# Official updates and community support available at https://nuos.org .
# Professional services available at https://ccsys.com .

NUOS_VER=0.0.12.99a0

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"

while getopts c:d:fh:kl:o:p:qr:s:vw:xz: OPT; do case $OPT in
	c) PKG_COLLECTION=$OPTARG;;
	d) DD_IMG=$OPTARG;;
	f) OPT_FINGERPRINT_DD=y;;
	h) NEW_HOST=$OPTARG;;
	k) incr KEEP_ONLINE 1;;
	l) LOCAL_SCRIPT=$OPTARG;;
	o) OUTPUT_POOL_NAME=$OPTARG;;
	p) POOL_NAME=$OPTARG;;
	q) OPT_QUICK=y;;
	r) RELEASE_ID=$OPTARG;;
	s) SWAP_SIZE=$OPTARG;;
	v) OPT_VERBOSE=y;;
	w) WORK_POOL_NAME=$OPTARG;;
	x) OPT_COMPRESS_DD=y;;
	z) ZVOL_SIZE=$OPTARG;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

load_lib nu_collection nu_make nu_ports nu_install

baseos_init
nuos_init
make_vars_init
collection_vars_init
build_vars_init
require_base_src
install_vars_init -q

echo 'new zvol sizes (2x)  -z ZVOL_SIZE        ' ${ZVOL_SIZE:=30000000K}
echo 'work pool            -w WORK_POOL_NAME   ' ${WORK_POOL_NAME:=spawn}
echo 'output pool          -o OUTPUT_POOL_NAME ' ${OUTPUT_POOL_NAME:=spore}
echo 'local init script    -l LOCAL_SCRIPT     ' ${LOCAL_SCRIPT:-<none>}

maybe_pause
maybe_yell

if [ @ = "${DD_IMG-}" ]; then
	ver=$NUOS_VER
	while [ $ver != ${ver#0.} ]; do
		ver=${ver#0.}
		incr dev_track 1
	done
	case ${dev_track-0} in
		0) t=r;; # release
		1) t=b;; # beta
		2) t=v;; # variant
		*) t=x;; # xyz/bleeding 
	esac
	DD_IMG=nuOS-$t$ver-$TRGT_MACH.dd
fi

[ ${KEEP_ONLINE-0} -eq 0 ] || ! canhas ${DD_IMG-}
! canhas ${DD_IMG-} || [ ! -e "$DD_IMG" ]
! srsly ${OPT_COMPRESS_DD-} || [ ! -e "$DD_IMG.xz" ]
! srsly ${OPT_FINGERPRINT_DD-} || [ ! -e "$DD_IMG.sum" ]

sister nu_img -p $POOL_NAME -C -z $ZVOL_SIZE $OUTPUT_POOL_NAME

if ! zpool list $WORK_POOL_NAME; then
	sister nu_img -p $POOL_NAME -C -z $ZVOL_SIZE $WORK_POOL_NAME
	work_zvdev=`sister nu_img -i $WORK_POOL_NAME`
	sister nu_hdd -b -u 100 -a 128 -q -p $WORK_POOL_NAME $work_zvdev
fi

if ! zfs list $WORK_POOL_NAME/os/nuOS; then
	sister nu_build -p $WORK_POOL_NAME -r ${RELEASE_ID:-r0} -c $PKG_COLLECTION -q
	zpool trim $WORK_POOL_NAME || true
fi

output_zvdev=`sister nu_img -i $OUTPUT_POOL_NAME`
sister nu_hdd -b -u 100 -a 128 -q -p $OUTPUT_POOL_NAME $output_zvdev
sister nu_os_install -P $WORK_POOL_NAME -p $OUTPUT_POOL_NAME -c $PKG_COLLECTION -q
[ ${KEEP_ONLINE-0} -ge 2 -o -z "${work_zvdev-}" ] || zpool export $WORK_POOL_NAME
[ ${KEEP_ONLINE-0} -ge 2 -o -z "${work_zvdev-}" ] || sister nu_img -d $WORK_POOL_NAME

sister nu_sys -s $SWAP_SIZE -p $OUTPUT_POOL_NAME -u '' -b '' -h $NEW_HOST -c $PKG_COLLECTION ${LOCAL_SCRIPT:+-l $LOCAL_SCRIPT} -q
[ ${KEEP_ONLINE-0} -ge 1 ] || zpool export $OUTPUT_POOL_NAME
[ ${KEEP_ONLINE-0} -ge 1 ] || sister nu_img -d $OUTPUT_POOL_NAME

[ ${KEEP_ONLINE-0} -ge 1 ] || zfs snapshot $POOL_NAME/img/$OUTPUT_POOL_NAME@birth

if canhas "${DD_IMG-}"; then
	[ -f "$DD_IMG" ] || dd if=/dev/zvol/$POOL_NAME/img/$OUTPUT_POOL_NAME of="$DD_IMG" bs=2M conv=sync,sparse status=progress
	chmod -w "$DD_IMG"
	if srsly ${OPT_COMPRESS_DD-}; then
		[ -f "$DD_IMG.xz" ] || xz -v -k -T0 "$DD_IMG"
	fi
	if srsly ${OPT_FINGERPRINT_DD-}; then
		eko "TIMESTAMP = `date +%s`" >| "$DD_IMG.sum"
		for h in sha256 rmd320 sha512; do
			if ! which $h; then
				h=$NUOS_CODE/util/$h/target/release/$h
				if ! [ -f $h -a -x $h ]; then
					make -C $NUOS_CODE/util/${h##*/} release
					user=`stat -f %Sg "$NUOS_CODE/util/${h##*/}"`
					chown -R $user "$NUOS_CODE/util/${h##*/}/target"
				fi
				eko $h
			fi
			for sufx in '' ${OPT_COMPRESS_DD:+.xz}; do
				$h "$DD_IMG$sufx" | tee -a "$DD_IMG.sum"
			done
		done
		for sufx in '' ${OPT_COMPRESS_DD:+.xz}; do
			stat -f 'SIZE (%N) = %z' "$DD_IMG$sufx" | tee -a "$DD_IMG.sum"
		done
		chmod -w "$DD_IMG.sum"
	fi
fi

echo "Created a work image at $POOL_NAME/img/$WORK_POOL_NAME and a release image at $POOL_NAME/img/$OUTPUT_POOL_NAME."
