#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.12.99a0 - bin/nu_img
#
# Copyright (c) 2008-2024 Chad Jacob Milios and Crop Circle Systems.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Simplified BSD License.
# If a copy of the Simplified BSD License was not distributed alongside this file, you can
# obtain one at https://www.freebsd.org/copyright/freebsd-license.html . This software
# project is not affiliated with the FreeBSD Project.
#
# Official updates and community support available at https://nuos.org .
# Professional services available at https://ccsys.com .

NUOS_VER=0.0.12.99a0

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"

while getopts b:Cdip:vz: OPT; do case $OPT in
	b) BLOCK_SIZE=$OPTARG;;
	C) OPT_NO_COMPRESSION=y;;
	d) OPT_DELETE=y;;
	i) OPT_INFO=y;;
	p) POOL_NAME=$OPTARG;;
	v) OPT_VERBOSE=y;;
	z) ZVOL_SIZE=$OPTARG;;
esac; done; shift $(($OPTIND-1))
[ $# -gt 0 ]

if srsly ${OPT_INFO-}; then
	for img_name in $@; do
		sed -n -E -e '
				/^zvdev=([[:alpha:]]+[[:digit:]]+)$/{s//\1/;p;}
			' /tmp/nu_img.vol-$img_name.conf
	done
	exit 0
fi

baseos_init
nuos_init

eko 'pool name       -p POOL_NAME      ' ${POOL_NAME:=$POOL_BOOT_NAME}
eko 'new zvol size   -z ZVOL_SIZE      ' ${ZVOL_SIZE:=30000000K}
eko 'new zvol blksz  -b BLOCK_SIZE     ' ${BLOCK_SIZE:=4K}
eko

get_ctlun_from_zvol () {
	local zv=$1
	local zv_escd=`eko $zv | sed -e 's/\\./\\\\./g;s|/|\\\\/|g'`
	ctladm devlist -b block -v | tail -n +2 | awk '/^ +[[:digit:]]+ block /{x = $1} /^ +file=\/dev\/zvol\/'"$zv_escd"'$/{r = x} END{print r}'
}

maybe_yell

feport=`ctladm portlist -q -f camsim | cut -w -f 1 | tail -n 1`
[ -n "$feport" ]

sbdev=`camcontrol devlist -b | awk '$3 ~ /^camsim[[:digit:]]/ {print $1}' | tail -n 1`
[ -n "$sbdev" ]

zfs create -p -o volmode=dev -o mountpoint=none -o canmount=off $POOL_NAME/img

for img_name in $@; do
	
	eko 'image name                        ' $img_name
	
	unset zv ctlun felun zvdev
	
	if zpool list $img_name > /dev/null 2>&1; then
		error 1 $img_name is a currently imported pool.
	elif srsly ${OPT_DELETE-}; then
		[ -f "/tmp/nu_img.vol-$img_name.conf" ] || error 85 "image unknown"
		[ 0:0:600 = "$(stat -f %u:%g:%Lp "/tmp/nu_img.vol-$img_name.conf")" ]
		cat /tmp/nu_img.vol-$img_name.conf
		require_tmp image_conf
		sed -n -E -e '
				/^zv=[[:alnum:]/]+$/p
				/^(ct|fe)lun=[[:digit:]]+$/p
				/^zvdev=[[:alpha:]]+[[:digit:]]+$/p
			' /tmp/nu_img.vol-$img_name.conf >| "$image_conf"
		. "$image_conf"
		retire_tmp image_conf
		[ -n "$zv" -a -n "$ctlun" -a -n "$felun" -a -n "$zvdev" ] || error 79
		ctladm lunmap -p $feport -l $felun
		ctladm port -p $feport -o on
		sleep 2
		ctladm remove -b block -l $ctlun
		rm /tmp/nu_img.vol-$img_name.conf
		rm /tmp/nu_img.dev-$zvdev.conf
	else
		[ ! -f "/tmp/nu_img.vol-$img_name.conf" ] || error 17 "image already configured"
		require_tmp image_conf
		zv=$POOL_NAME/img/$img_name
		spill zv >> "$image_conf"
		if zfs create -V $ZVOL_SIZE -b $BLOCK_SIZE -s -o volmode=dev ${OPT_NO_COMPRESSION:+-o compression=off} $zv || ! canhas `get_ctlun_from_zvol $zv`; then
			ctladm create -b block -o pblocksize=`dehumanize $BLOCK_SIZE` -o ublocksize=$((`dehumanize $BLOCK_SIZE` * 128)) -o file=/dev/zvol/$zv
		fi
		ctlun=`get_ctlun_from_zvol $zv`
		spill ctlun >> "$image_conf"
		ctladm reqsense $ctlun
		ctladm start $ctlun
		felun=`ctladm portlist -q -l -p $feport | tail -n +2 | awk '{if ($2 != (NR - 1) ":") {f = 1; print NR - 1; exit}} END{if (! f) print NR}'`
		spill felun >> "$image_conf"
		ctladm lunmap -p $feport -l $felun -L $ctlun
		ctladm port -p $feport -o on
		sleep 2
		zvdev=`camcontrol devlist | sed -nEe '/^.+ at '"$sbdev"' target [[:digit:]]+ lun '"$felun"' \((.+)\)$/{s//\1/;p;}' | tr , '\n' | grep '^da[[:digit:]]'`
		spill zvdev >> "$image_conf"
		mv "$image_conf" /tmp/nu_img.vol-$img_name.conf
		(umask 77 && ln -s nu_img.vol-$img_name.conf /tmp/nu_img.dev-$zvdev.conf)
		unset image_conf
	fi
	
	eko 'image device                      ' $zvdev
	eko

done
