# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	bitcoingold
#	bitcoingold-daemon
#	bitcoingold-utils
#	bitcoingold-daemon/Makefile
#	bitcoingold-daemon/pkg-message
#	bitcoingold-utils/Makefile
#	bitcoingold/Makefile
#	bitcoingold/distinfo
#	bitcoingold/files
#	bitcoingold/files/bitcoingold-qt.desktop
#	bitcoingold/files/bitcoingold.conf
#	bitcoingold/files/bitcoingoldd.in
#	bitcoingold/files/patch-src_httpserver.cpp
#	bitcoingold/files/patch-src_net_processing.cpp
#	bitcoingold/files/patch-src_qt_bitcoingui.cpp
#	bitcoingold/files/patch-src_qt_clientmodel.cpp
#	bitcoingold/files/patch-src_qt_splashscreen.cpp
#	bitcoingold/files/patch-src_qt_trafficgraphwidget.h
#	bitcoingold/files/patch-src_qt_transactiontablemodel.cpp
#	bitcoingold/files/patch-src_qt_walletmodel.cpp
#	bitcoingold/files/patch-src_validation.cpp
#	bitcoingold/files/patch-src_validationinterface.cpp
#	bitcoingold/files/patch-src_wallet_coinselection.cpp
#	bitcoingold/pkg-descr
#	bitcoingold/pkg-message
#
echo c - bitcoingold
mkdir -p bitcoingold > /dev/null 2>&1
echo c - bitcoingold-daemon
mkdir -p bitcoingold-daemon > /dev/null 2>&1
echo c - bitcoingold-utils
mkdir -p bitcoingold-utils > /dev/null 2>&1
echo x - bitcoingold-daemon/Makefile
sed 's/^X//' >bitcoingold-daemon/Makefile << '84fe1e82edda964a88fa3376afc554ff'
XMASTERDIR=	${.CURDIR}/../bitcoingold
XPKGNAMESUFFIX=	-daemon
X
XCOMMENT=	Virtual Peer-to-Peer Currency (Daemon)
X
XSLAVE_PORT=	yes
X
XNOT_FOR_ARCHS=		powerpc powerpc64 sparc64
XNOT_FOR_ARCHS_REASON=	does not support big-endian architectures
X
XOPTIONS_DEFINE=		DEBUG HARDENING TESTS UPNP WALLET ZMQ
XOPTIONS_DEFAULT=	HARDENING UPNP WALLET
X
XUSERS=		bitcoingold
XGROUPS=		bitcoingold
X
XCONFIGURE_ARGS=	--with-daemon \
X		--with-incompatible-bdb \
X		--without-gui \
X		--without-libs \
X		--without-qrencode \
X		--without-utils
X
XPLIST_FILES=	bin/bitcoingoldd \
X		man/man1/bitcoingoldd.1.gz \
X		etc/bitcoingold.conf.sample
X
XUSE_RC_SUBR=	bitcoingoldd
X
Xpost-install:
X	${INSTALL_DATA} ${WRKSRC}/contrib/debian/examples/bitcoingold.conf ${STAGEDIR}${PREFIX}/etc/bitcoingold.conf.sample
X	${MV} ${STAGEDIR}${PREFIX}/bin/bgoldd ${STAGEDIR}${PREFIX}/bin/bitcoingoldd
X	${MV} ${STAGEDIR}${PREFIX}/man/man1/bgoldd.1 ${STAGEDIR}${PREFIX}/man/man1/bitcoingoldd.1
X
X.include "${MASTERDIR}/Makefile"
84fe1e82edda964a88fa3376afc554ff
echo x - bitcoingold-daemon/pkg-message
sed 's/^X//' >bitcoingold-daemon/pkg-message << '251b9dc823b1859a311dc903089beab8'
X[
X{ type: install
X  message: <<EOM
XThis FreeBSD port normalizes the names of some executables and config
Xfiles to be consistent with and coexist with other bitcoin forks. When
XBitcoin Gold discussion or documentation refers to bgold or bitcoin in
Xparticular contexts, think bitcoingold.
X
XWARNING: Found Berkeley DB other than 4.8; wallets opened by this build
Xwill not be portable! Be sure to use the facilities utilizing plaintext
Xformats for wallet backup/restore.
XEOM
X}
X]
251b9dc823b1859a311dc903089beab8
echo x - bitcoingold-utils/Makefile
sed 's/^X//' >bitcoingold-utils/Makefile << '017da92757830ebf5ed74f3cf3588f52'
XMASTERDIR=	${.CURDIR}/../bitcoingold
XPKGNAMESUFFIX=	-utils
X
XCOMMENT=	Virtual Peer-to-Peer Currency (CLI and Utilities)
XSLAVE_PORT=	yes
X
XNOT_FOR_ARCHS=		powerpc powerpc64 sparc64
XNOT_FOR_ARCHS_REASON=	does not support big-endian architectures
X
XOPTIONS_DEFINE=		DEBUG HARDENING TESTS
XOPTIONS_DEFAULT=	HARDENING
X
XCONFIGURE_ARGS=	--without-daemon \
X		--without-gui \
X		--without-libs \
X		--without-qrencode \
X		--without-miniupnpc \
X		--with-utils \
X		--disable-wallet
X
XPLIST_FILES=	bin/bitcoingold-cli bin/bitcoingold-tx \
X		man/man1/bitcoingold-cli.1.gz man/man1/bitcoingold-tx.1.gz
X
Xpost-install:
X	${MV} ${STAGEDIR}${PREFIX}/bin/bgold-cli ${STAGEDIR}${PREFIX}/bin/bitcoingold-cli
X	${MV} ${STAGEDIR}${PREFIX}/man/man1/bgold-cli.1 ${STAGEDIR}${PREFIX}/man/man1/bitcoingold-cli.1
X	${MV} ${STAGEDIR}${PREFIX}/bin/bitcoin-tx ${STAGEDIR}${PREFIX}/bin/bitcoingold-tx
X	${MV} ${STAGEDIR}${PREFIX}/man/man1/bitcoin-tx.1 ${STAGEDIR}${PREFIX}/man/man1/bitcoingold-tx.1
X
X.include "${MASTERDIR}/Makefile"
017da92757830ebf5ed74f3cf3588f52
echo x - bitcoingold/Makefile
sed 's/^X//' >bitcoingold/Makefile << '7563b7e189ea792af64d1a1b621d8cf4'
XPORTNAME=	bitcoingold
XPORTVERSION=	0.17.3
XDISTVERSIONPREFIX=	v
XCATEGORIES=	net-p2p finance
X
XMAINTAINER=	milios@ccsys.com
XCOMMENT?=	Virtual Peer-to-Peer Currency Client (QT)
X
XLICENSE=	MIT
X
XBROKEN_powerpc64=	fails to compile: util.cpp: undefined reference to boost::program_options::to_internal
X
XLIB_DEPENDS=	libboost_date_time.so:devel/boost-libs \
X		libsodium.so:security/libsodium \
X		libb2.so:devel/libb2 \
X		libevent.so:devel/libevent
X
XUSES=		autoreconf compiler:c++17-lang gmake libtool pkgconfig shebangfix ssl
XUSE_GITHUB=	yes
XGNU_CONFIGURE=	yes
X
XSLAVE_PORT?=	no
X
X.if defined(SLAVE_PORT) && ${SLAVE_PORT} == "no"
XUSES+=		desktop-file-utils
XUSE_QT5=	core gui network widgets \
X		buildtools_build linguisttools_build qmake_build
X
XBUILD_DEPENDS+=	protoc:devel/protobuf
XLIB_DEPENDS+=	libprotobuf.so:devel/protobuf
X
XTESTS_USE=		QT5=testlib
XTESTS_PLIST_FILES=	bin/test_bitcoingold-qt \
X			bin/test_bitcoingold
X.endif
X
XOPTIONS_DEFINE?=	DBUS DEBUG HARDENING QRCODES TESTS UPNP WALLET ZMQ
XOPTIONS_DEFAULT?=	DBUS HARDENING QRCODES UPNP WALLET
XOPTIONS_SUB=		yes
X
XHARDENING_DESC=	Attempt to harden binaries (PIE for ASLR, NX Stack)
XQRCODES_DESC=	Display QR Codes
XTESTS_DESC=	Build test binary and unit tests
XWALLET_DESC=	Wallet Management Support
XZMQ_DESC=	Block and transaction broadcasting with ZeroMQ
X
XDBUS_CONFIGURE_WITH=	dbus
XDBUS_USE=		QT5=dbus
X
XDEBUG_CONFIGURE_ENABLE=		debug
XDEBUG_INSTALL_TARGET_OFF=	install-strip
X
XHARDENING_CONFIGURE_ENABLE=	hardening
X
XTESTS_CONFIGURE_ENABLE=	tests bench
X.if defined(SLAVE_PORT) && ${SLAVE_PORT} == "yes"
XTESTS_PLIST_FILES=	bin/test_bitcoingold
X.endif
XTESTS_PLIST_FILES+=	bin/bench_bitcoingold
X
XUPNP_CONFIGURE_WITH=	miniupnpc
XUPNP_LIB_DEPENDS=	libminiupnpc.so:net/miniupnpc
XUPNP_CPPFLAGS=		-I${LOCALBASE}/include
XUPNP_LIBS=		-L${LOCALBASE}/lib
X
XQRCODES_CONFIGURE_WITH=	qrencode
XQRCODES_LIB_DEPENDS=	libqrencode.so:graphics/libqrencode
X
XWALLET_CONFIGURE_ENABLE=	wallet
XWALLET_CXXFLAGS=		-I${BDB_INCLUDE_DIR}
XWALLET_LIBS=			-L${BDB_LIB_DIR}
XWALLET_USES=			bdb:5
X
XZMQ_CONFIGURE_ENABLE=	zmq
XZMQ_BUILD_DEPENDS=	libzmq4>0:net/libzmq4
XZMQ_RUN_DEPENDS=	libzmq4>0:net/libzmq4
X
XGH_ACCOUNT=	BTCGPU
XGH_PROJECT=	BTCGPU
X
XUSE_CXXSTD=	c++17
X
XCPPFLAGS+=	-I${LOCALBASE}/include -I${LOCALBASE}/include/db5
X
XCONFIGURE_ARGS?=	--without-libs \
X			--with-gui=qt5 \
X			--with-incompatible-bdb \
X			--without-daemon \
X			--without-utils
X
XCONFIGURE_ENV=	LIBS="-L${LOCALBASE}/lib -L${LOCALBASE}/lib/db5 -lsodium" \
X		CRYPTO_CFLAGS="-I${OPENSSLINC}" CRYPTO_LIBS="-L${OPENSSLLIB} -lcrypto" \
X		SSL_CFLAGS="-I${OPENSSLINC}" SSL_LIBS="-L${OPENSSLLIB} -lssl" \
X		OBJCXX="${CXX}" OBJCXXFLAGS="${CXXFLAGS}"
XMAKE_ENV+=	V=1
X
XPLIST_FILES?=	bin/bitcoingold-qt man/man1/bitcoingold-qt.1.gz \
X		share/applications/bitcoingold-qt.desktop share/pixmaps/bitcoingold128.png
X
X.if defined(SLAVE_PORT) && ${SLAVE_PORT} == "no"
X
Xpost-install:
X	${MV} ${STAGEDIR}${PREFIX}/bin/bitcoin-qt ${STAGEDIR}${PREFIX}/bin/bitcoingold-qt
X	${MV} ${STAGEDIR}${PREFIX}/man/man1/bitcoin-qt.1 ${STAGEDIR}${PREFIX}/man/man1/bitcoingold-qt.1
X	${INSTALL} ${FILESDIR}/bitcoingold-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/
X	${INSTALL} ${WRKSRC}/share/pixmaps/bitcoin128.png \
X		${STAGEDIR}${PREFIX}/share/pixmaps/bitcoingold128.png
X
X.endif
X
Xpost-install-TESTS-on:
X.if defined(SLAVE_PORT) && ${SLAVE_PORT} == "no"
X	${MV} ${STAGEDIR}${PREFIX}/bin/test_bitcoin-qt ${STAGEDIR}${PREFIX}/bin/test_bitcoingold-qt
X.endif
X	${MV} ${STAGEDIR}${PREFIX}/bin/test_bitcoin ${STAGEDIR}${PREFIX}/bin/test_bitcoingold
X	${MV} ${STAGEDIR}${PREFIX}/bin/bench_bitcoin ${STAGEDIR}${PREFIX}/bin/bench_bitcoingold
X
Xregression-test: build
X	# To use this sucessfully, remove --without-daemon and --without-utils
X	# from CONFIGURE_ARGS above.
X
X	@cd ${WRKSRC} && ${GMAKE} check
X
X.include <bsd.port.mk>
7563b7e189ea792af64d1a1b621d8cf4
echo x - bitcoingold/distinfo
sed 's/^X//' >bitcoingold/distinfo << 'c62ccaff1130564e47593307416a99a2'
XTIMESTAMP = 1704428771
XSHA256 (BTCGPU-BTCGPU-v0.17.3_GH0.tar.gz) = e4466be5adab6ae3400642daa76b85c06766883f8120f44331a81202eb477c7a
XSIZE (BTCGPU-BTCGPU-v0.17.3_GH0.tar.gz) = 5589404
c62ccaff1130564e47593307416a99a2
echo c - bitcoingold/files
mkdir -p bitcoingold/files > /dev/null 2>&1
echo x - bitcoingold/files/bitcoingold-qt.desktop
sed 's/^X//' >bitcoingold/files/bitcoingold-qt.desktop << '51f5aa06c4f9c23177a505696cec5afa'
X[Desktop Entry]
XVersion=1.0
XName=Bitcoin Gold Core
XComment=Connect to the Bitcoin Gold P2P Network
XComment[de]=Verbinde mit dem Bitcoin Gold peer-to-peer Netzwerk
XComment[fr]=Bitcoin Gold, monnaie virtuelle cryptographique pair à pair
XComment[tr]=Bitcoin Gold, eşten eşe kriptografik sanal para birimi
XExec=bitcoin-qt %u
XTerminal=false
XType=Application
XIcon=bitcoingold128
XMimeType=x-scheme-handler/bitcoingold;
XCategories=Office;Finance;
XStartupWMClass=Bitcoingold-qt
51f5aa06c4f9c23177a505696cec5afa
echo x - bitcoingold/files/bitcoingold.conf
sed 's/^X//' >bitcoingold/files/bitcoingold.conf << '0f5d3aa28c0f016c06ad1843e44d8353'
X# FreeBSD bitcoingoldd configuration file
X
X# This file is used by bitcoingoldd
X# The GUI and CLI will default to generating and using ~/.bitcoingold/bitcoingold.conf
X#
X# bitcoingold has hundreds of config options and there isn't a single mode of
X# operation (mining, client, testnet etc)  that can be easily covered by a
X# sample file.
X
X# Bind to given address and always listen on it. Use [host]:port notation for IPv6
X#bind=<addr>
X
X# Specify your own public IP address.
X#externalip=<ip>
X
X# Listen for incoming connections on non-default port.
X#port=<port>
X
X# Connect via a SOCKS5 proxy
X#proxy=127.0.0.1:9050
0f5d3aa28c0f016c06ad1843e44d8353
echo x - bitcoingold/files/bitcoingoldd.in
sed 's/^X//' >bitcoingold/files/bitcoingoldd.in << '45cc1761b4ee270236910c1860b16aff'
X#!/bin/sh
X
X# PROVIDE: bitcoingoldd
X# REQUIRE: LOGIN cleanvar
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf to enable :
X# bitcoingoldd_enable (bool):	Set to "NO" by default.
X#				Set it to "YES" to enable bitcoingoldd
X# bitcoingoldd_user (str)		Set to "bitcoingold" by default.
X# bitcoingoldd_group (str)		Set to "bitcoingold" by default.
X# bitcoingoldd_conf (str)		Set to "%%PREFIX%%/etc/bitcoingoldd.conf" by default.
X# bitcoingoldd_data_dir (str)	Set to "/var/db/bitcoingold" by default.
X# bitcoingolddlimits_enable (bool)	Set to "NO" by default.
X#				Set it to "YES" to enable bitcoingolddlimits
X# bitcoingolddlimits_args		Set to "-e -U ${bitcoingoldd_user}" by default
X
X
X. /etc/rc.subr
X
Xname="bitcoingoldd"
Xrcvar=bitcoingoldd_enable
X
Xstart_precmd="bitcoingoldd_precmd"
Xstart_cmd="bitcoingoldd_start"
Xrestart_precmd="bitcoingoldd_checkconfig"
Xreload_precmd="bitcoingoldd_checkconfig"
Xconfigtest_cmd="bitcoingoldd_checkconfig"
Xstatus_cmd="bitcoingoldd_status"
Xstop_cmd="bitcoingoldd_stop"
Xstop_postcmd="bitcoingoldd_wait"
Xcommand="%%PREFIX%%/bin/bitcoingoldd"
Xdaemon_command="/usr/sbin/daemon"
Xpidfile="/var/run/${name}.pid"
Xextra_commands="configtest"
X
X
X: ${bitcoingoldd_enable:="NO"}
X: ${bitcoingolddlimits_enable:="NO"}
X
Xload_rc_config ${name}
X
X: ${bitcoingoldd_user:="bitcoingold"}
X: ${bitcoingoldd_group:="bitcoingold"}
X: ${bitcoingoldd_data_dir:="/var/db/bitcoingold"}
X: ${bitcoingoldd_config_file:="%%PREFIX%%/etc/bitcoingold.conf"}
X: ${bitcoingolddlimits_args:="-e -U ${bitcoingoldd_user}"}
X
X# set up dependant variables
Xprocname="${command}"
Xrequired_files="${bitcoingoldd_config_file}"
X
X
Xbitcoingoldd_checkconfig()
X{
X  echo "Performing sanity check on bitcoingoldd configuration:"
X  if [ ! -d "${bitcoingoldd_data_dir}" ]
X  then
X    echo "Missing data directory: ${bitcoingoldd_data_dir}"
X    exit 1
X  fi
X  chown -R "${bitcoingoldd_user}:${bitcoingoldd_group}" "${bitcoingoldd_data_dir}"
X
X  if [ ! -f "${bitcoingoldd_config_file}" ]
X  then
X    echo "Missing configuration file: ${bitcoingoldd_config_file}"
X    exit 1
X  fi
X  if [ ! -x "${command}" ]
X  then
X    echo "Missing executable: ${command}"
X    exit 1
X  fi
X  return 0
X}
X
Xbitcoingoldd_cleanup()
X{
X  rm -f "${pidfile}"
X}
X
Xbitcoingoldd_precmd()
X{
X  bitcoingoldd_checkconfig
X
X  pid=$(check_pidfile "${pidfile}" "${procname}")
X  if [ -z "${pid}" ]
X  then
X    echo "Bitcoingoldd is not running"
X    rm -f "${pidfile}"
X  fi
X
X  if checkyesno bitcoingolddlimits_enable
X  then
X    eval $(/usr/bin/limits ${bitcoingolddlimits_args}) 2>/dev/null
X  else
X    return 0
X  fi
X}
X
Xbitcoingoldd_status()
X{
X  local pid
X  pid=$(check_pidfile "${pidfile}" "${procname}")
X  if [ -z "${pid}" ]
X  then
X    echo "Bitcoingoldd is not running"
X    return 1
X  else
X    echo "Bitcoingoldd running, pid: ${pid}"
X  fi
X}
X
Xbitcoingoldd_start()
X{
X  echo "Starting bitcoingoldd:"
X  cd "${bitcoingoldd_data_dir}" || return 1
X  ${daemon_command} -u "${bitcoingoldd_user}" -p "${pidfile}" -f \
X    ${command} \
X    -conf="${bitcoingoldd_config_file}" \
X    -datadir="${bitcoingoldd_data_dir}"
X}
X
Xbitcoingoldd_stop()
X{
X  echo "Stopping bitcoingoldd:"
X  pid=$(check_pidfile "${pidfile}" "${procname}")
X  if [ -z "${pid}" ]
X  then
X    echo "Bitcoingoldd is not running"
X    return 1
X  else
X    kill ${pid}
X  fi
X}
X
Xbitcoingoldd_wait()
X{
X  local n=60
X  echo "Waiting for bitcoingoldd shutdown:"
X  while :
X  do
X    printf '.'
X    pid=$(check_pidfile "${pidfile}" "${procname}")
X    if [ -z "${pid}" ]
X    then
X      printf '\n'
X      break
X    fi
X    sleep 1
X    n=$((${n} - 1))
X    if [ ${n} -eq 0 -a -f "${pidfile}" ]
X    then
X      printf "\nForce shutdown"
X      kill -9 $(cat "${pidfile}")
X      for n in 1 2 3
X      do
X        printf '.'
X        sleep 1
X      done
X      printf '\n'
X      break
X    fi
X  done
X  rm -f "${pidfile}"
X  echo "Shutdown complete"
X}
X
Xrun_rc_command "$1"
45cc1761b4ee270236910c1860b16aff
echo x - bitcoingold/files/patch-src_httpserver.cpp
sed 's/^X//' >bitcoingold/files/patch-src_httpserver.cpp << 'a806d0f97dfc3e8ad384f5942a0532f3'
X--- src/httpserver.cpp.orig	2024-01-05 06:22:07.860078000 +0000
X+++ src/httpserver.cpp	2024-01-05 06:22:30.564086000 +0000
X@@ -13,6 +13,7 @@
X #include <sync.h>
X #include <ui_interface.h>
X 
X+#include <deque>
X #include <memory>
X #include <stdio.h>
X #include <stdlib.h>
a806d0f97dfc3e8ad384f5942a0532f3
echo x - bitcoingold/files/patch-src_net_processing.cpp
sed 's/^X//' >bitcoingold/files/patch-src_net_processing.cpp << 'c0cd077c9c912662aca03986a0980df3'
X--- src/net_processing.cpp.orig	2024-01-06 00:28:38.382777000 +0000
X+++ src/net_processing.cpp	2024-01-06 00:28:07.928136000 +0000
X@@ -30,6 +30,7 @@
X #include <utilstrencodings.h>
X 
X #include <memory>
X+#include <array>
X 
X #if defined(NDEBUG)
X # error "Bitcoin cannot be compiled without assertions."
c0cd077c9c912662aca03986a0980df3
echo x - bitcoingold/files/patch-src_qt_bitcoingui.cpp
sed 's/^X//' >bitcoingold/files/patch-src_qt_bitcoingui.cpp << 'fe29ccfea37ba737c31381ea4cd5bd46'
X--- src/qt/bitcoingui.cpp.orig	2024-01-05 05:29:19.066375000 +0000
X+++ src/qt/bitcoingui.cpp	2024-01-05 05:30:10.183390000 +0000
X@@ -1220,8 +1220,8 @@
X void BitcoinGUI::subscribeToCoreSignals()
X {
X     // Connect signals to client
X-    m_handler_message_box = m_node.handleMessageBox(boost::bind(ThreadSafeMessageBox, this, _1, _2, _3));
X-    m_handler_question = m_node.handleQuestion(boost::bind(ThreadSafeMessageBox, this, _1, _3, _4));
X+    m_handler_message_box = m_node.handleMessageBox(boost::bind(ThreadSafeMessageBox, this, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3));
X+    m_handler_question = m_node.handleQuestion(boost::bind(ThreadSafeMessageBox, this, boost::placeholders::_1, boost::placeholders::_3, boost::placeholders::_4));
X }
X 
X void BitcoinGUI::unsubscribeFromCoreSignals()
fe29ccfea37ba737c31381ea4cd5bd46
echo x - bitcoingold/files/patch-src_qt_clientmodel.cpp
sed 's/^X//' >bitcoingold/files/patch-src_qt_clientmodel.cpp << '34620545f53a5d4b650385cfd5ddf139'
X--- src/qt/clientmodel.cpp.orig	2024-01-05 05:34:23.994426000 +0000
X+++ src/qt/clientmodel.cpp	2024-01-05 05:35:49.274895000 +0000
X@@ -247,13 +247,13 @@
X void ClientModel::subscribeToCoreSignals()
X {
X     // Connect signals to client
X-    m_handler_show_progress = m_node.handleShowProgress(boost::bind(ShowProgress, this, _1, _2));
X-    m_handler_notify_num_connections_changed = m_node.handleNotifyNumConnectionsChanged(boost::bind(NotifyNumConnectionsChanged, this, _1));
X-    m_handler_notify_network_active_changed = m_node.handleNotifyNetworkActiveChanged(boost::bind(NotifyNetworkActiveChanged, this, _1));
X+    m_handler_show_progress = m_node.handleShowProgress(boost::bind(ShowProgress, this, boost::placeholders::_1, boost::placeholders::_2));
X+    m_handler_notify_num_connections_changed = m_node.handleNotifyNumConnectionsChanged(boost::bind(NotifyNumConnectionsChanged, this, boost::placeholders::_1));
X+    m_handler_notify_network_active_changed = m_node.handleNotifyNetworkActiveChanged(boost::bind(NotifyNetworkActiveChanged, this, boost::placeholders::_1));
X     m_handler_notify_alert_changed = m_node.handleNotifyAlertChanged(boost::bind(NotifyAlertChanged, this));
X     m_handler_banned_list_changed = m_node.handleBannedListChanged(boost::bind(BannedListChanged, this));
X-    m_handler_notify_block_tip = m_node.handleNotifyBlockTip(boost::bind(BlockTipChanged, this, _1, _2, _3, _4, false));
X-    m_handler_notify_header_tip = m_node.handleNotifyHeaderTip(boost::bind(BlockTipChanged, this, _1, _2, _3, _4, true));
X+    m_handler_notify_block_tip = m_node.handleNotifyBlockTip(boost::bind(BlockTipChanged, this, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3, boost::placeholders::_4, false));
X+    m_handler_notify_header_tip = m_node.handleNotifyHeaderTip(boost::bind(BlockTipChanged, this, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3, boost::placeholders::_4, true));
X }
X 
X void ClientModel::unsubscribeFromCoreSignals()
34620545f53a5d4b650385cfd5ddf139
echo x - bitcoingold/files/patch-src_qt_splashscreen.cpp
sed 's/^X//' >bitcoingold/files/patch-src_qt_splashscreen.cpp << '5f6a200338f2490dd472c401f04b8859'
X--- src/qt/splashscreen.cpp.orig	2024-01-05 05:40:52.950271000 +0000
X+++ src/qt/splashscreen.cpp	2024-01-05 05:41:59.087691000 +0000
X@@ -178,7 +178,7 @@
X #ifdef ENABLE_WALLET
X void SplashScreen::ConnectWallet(std::unique_ptr<interfaces::Wallet> wallet)
X {
X-    m_connected_wallet_handlers.emplace_back(wallet->handleShowProgress(boost::bind(ShowProgress, this, _1, _2, false)));
X+    m_connected_wallet_handlers.emplace_back(wallet->handleShowProgress(boost::bind(ShowProgress, this, boost::placeholders::_1, boost::placeholders::_2, false)));
X     m_connected_wallets.emplace_back(std::move(wallet));
X }
X #endif
X@@ -186,8 +186,8 @@
X void SplashScreen::subscribeToCoreSignals()
X {
X     // Connect signals to client
X-    m_handler_init_message = m_node.handleInitMessage(boost::bind(InitMessage, this, _1));
X-    m_handler_show_progress = m_node.handleShowProgress(boost::bind(ShowProgress, this, _1, _2, _3));
X+    m_handler_init_message = m_node.handleInitMessage(boost::bind(InitMessage, this, boost::placeholders::_1));
X+    m_handler_show_progress = m_node.handleShowProgress(boost::bind(ShowProgress, this, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3));
X #ifdef ENABLE_WALLET
X     m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) { ConnectWallet(std::move(wallet)); });
X #endif
5f6a200338f2490dd472c401f04b8859
echo x - bitcoingold/files/patch-src_qt_trafficgraphwidget.h
sed 's/^X//' >bitcoingold/files/patch-src_qt_trafficgraphwidget.h << '077be5f3c4632564c110cd350faf15c7'
X--- src/qt/trafficgraphwidget.h.orig	2020-05-18 18:05:29 UTC
X+++ src/qt/trafficgraphwidget.h
X@@ -7,6 +7,7 @@
X 
X #include <QWidget>
X #include <QQueue>
X+#include <QPainterPath>
X 
X class ClientModel;
X 
077be5f3c4632564c110cd350faf15c7
echo x - bitcoingold/files/patch-src_qt_transactiontablemodel.cpp
sed 's/^X//' >bitcoingold/files/patch-src_qt_transactiontablemodel.cpp << '7b49b0fa765d2c40572fe171ab7ea544'
X--- src/qt/transactiontablemodel.cpp.orig	2024-01-05 06:01:17.479235000 +0000
X+++ src/qt/transactiontablemodel.cpp	2024-01-05 06:02:00.879500000 +0000
X@@ -744,8 +744,8 @@
X void TransactionTableModel::subscribeToCoreSignals()
X {
X     // Connect signals to wallet
X-    m_handler_transaction_changed = walletModel->wallet().handleTransactionChanged(boost::bind(NotifyTransactionChanged, this, _1, _2));
X-    m_handler_show_progress = walletModel->wallet().handleShowProgress(boost::bind(ShowProgress, this, _1, _2));
X+    m_handler_transaction_changed = walletModel->wallet().handleTransactionChanged(boost::bind(NotifyTransactionChanged, this, boost::placeholders::_1, boost::placeholders::_2));
X+    m_handler_show_progress = walletModel->wallet().handleShowProgress(boost::bind(ShowProgress, this, boost::placeholders::_1, boost::placeholders::_2));
X }
X 
X void TransactionTableModel::unsubscribeFromCoreSignals()
7b49b0fa765d2c40572fe171ab7ea544
echo x - bitcoingold/files/patch-src_qt_walletmodel.cpp
sed 's/^X//' >bitcoingold/files/patch-src_qt_walletmodel.cpp << 'd17b00f3b34ad0c63bb782617c3d5ba7'
X--- src/qt/walletmodel.cpp.orig	2024-01-05 06:09:08.897868000 +0000
X+++ src/qt/walletmodel.cpp	2024-01-05 06:10:05.315922000 +0000
X@@ -427,10 +427,10 @@
X     // Connect signals to wallet
X     m_handler_unload = m_wallet->handleUnload(boost::bind(&NotifyUnload, this));
X     m_handler_status_changed = m_wallet->handleStatusChanged(boost::bind(&NotifyKeyStoreStatusChanged, this));
X-    m_handler_address_book_changed = m_wallet->handleAddressBookChanged(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5));
X-    m_handler_transaction_changed = m_wallet->handleTransactionChanged(boost::bind(NotifyTransactionChanged, this, _1, _2));
X-    m_handler_show_progress = m_wallet->handleShowProgress(boost::bind(ShowProgress, this, _1, _2));
X-    m_handler_watch_only_changed = m_wallet->handleWatchOnlyChanged(boost::bind(NotifyWatchonlyChanged, this, _1));
X+    m_handler_address_book_changed = m_wallet->handleAddressBookChanged(boost::bind(NotifyAddressBookChanged, this, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3, boost::placeholders::_4, boost::placeholders::_5));
X+    m_handler_transaction_changed = m_wallet->handleTransactionChanged(boost::bind(NotifyTransactionChanged, this, boost::placeholders::_1, boost::placeholders::_2));
X+    m_handler_show_progress = m_wallet->handleShowProgress(boost::bind(ShowProgress, this, boost::placeholders::_1, boost::placeholders::_2));
X+    m_handler_watch_only_changed = m_wallet->handleWatchOnlyChanged(boost::bind(NotifyWatchonlyChanged, this, boost::placeholders::_1));
X }
X 
X void WalletModel::unsubscribeFromCoreSignals()
d17b00f3b34ad0c63bb782617c3d5ba7
echo x - bitcoingold/files/patch-src_validation.cpp
sed 's/^X//' >bitcoingold/files/patch-src_validation.cpp << '9ffd752489ad4c07209ee4049ed983c0'
X--- src/validation.cpp.orig	2024-01-06 00:33:35.890211000 +0000
X+++ src/validation.cpp	2024-01-06 00:34:51.980215000 +0000
X@@ -2432,11 +2432,11 @@
X 
X public:
X     explicit ConnectTrace(CTxMemPool &_pool) : blocksConnected(1), pool(_pool) {
X-        pool.NotifyEntryRemoved.connect(boost::bind(&ConnectTrace::NotifyEntryRemoved, this, _1, _2));
X+        pool.NotifyEntryRemoved.connect(boost::bind(&ConnectTrace::NotifyEntryRemoved, this, boost::placeholders::_1, boost::placeholders::_2));
X     }
X 
X     ~ConnectTrace() {
X-        pool.NotifyEntryRemoved.disconnect(boost::bind(&ConnectTrace::NotifyEntryRemoved, this, _1, _2));
X+        pool.NotifyEntryRemoved.disconnect(boost::bind(&ConnectTrace::NotifyEntryRemoved, this, boost::placeholders::_1, boost::placeholders::_2));
X     }
X 
X     void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {
9ffd752489ad4c07209ee4049ed983c0
echo x - bitcoingold/files/patch-src_validationinterface.cpp
sed 's/^X//' >bitcoingold/files/patch-src_validationinterface.cpp << 'c6f56cdb6e492c70ce68100cac463e6d'
X--- src/validationinterface.cpp.orig	2024-01-06 00:36:53.072504000 +0000
X+++ src/validationinterface.cpp	2024-01-06 00:49:09.566295000 +0000
X@@ -60,11 +60,11 @@
X }
X 
X void CMainSignals::RegisterWithMempoolSignals(CTxMemPool& pool) {
X-    pool.NotifyEntryRemoved.connect(boost::bind(&CMainSignals::MempoolEntryRemoved, this, _1, _2));
X+    pool.NotifyEntryRemoved.connect(boost::bind(&CMainSignals::MempoolEntryRemoved, this, boost::placeholders::_1, boost::placeholders::_2));
X }
X 
X void CMainSignals::UnregisterWithMempoolSignals(CTxMemPool& pool) {
X-    pool.NotifyEntryRemoved.disconnect(boost::bind(&CMainSignals::MempoolEntryRemoved, this, _1, _2));
X+    pool.NotifyEntryRemoved.disconnect(boost::bind(&CMainSignals::MempoolEntryRemoved, this, boost::placeholders::_1, boost::placeholders::_2));
X }
X 
X CMainSignals& GetMainSignals()
X@@ -73,27 +73,27 @@
X }
X 
X void RegisterValidationInterface(CValidationInterface* pwalletIn) {
X-    g_signals.m_internals->UpdatedBlockTip.connect(boost::bind(&CValidationInterface::UpdatedBlockTip, pwalletIn, _1, _2, _3));
X-    g_signals.m_internals->TransactionAddedToMempool.connect(boost::bind(&CValidationInterface::TransactionAddedToMempool, pwalletIn, _1));
X-    g_signals.m_internals->BlockConnected.connect(boost::bind(&CValidationInterface::BlockConnected, pwalletIn, _1, _2, _3));
X-    g_signals.m_internals->BlockDisconnected.connect(boost::bind(&CValidationInterface::BlockDisconnected, pwalletIn, _1));
X-    g_signals.m_internals->TransactionRemovedFromMempool.connect(boost::bind(&CValidationInterface::TransactionRemovedFromMempool, pwalletIn, _1));
X-    g_signals.m_internals->ChainStateFlushed.connect(boost::bind(&CValidationInterface::ChainStateFlushed, pwalletIn, _1));
X-    g_signals.m_internals->Broadcast.connect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn, _1, _2));
X-    g_signals.m_internals->BlockChecked.connect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));
X-    g_signals.m_internals->NewPoWValidBlock.connect(boost::bind(&CValidationInterface::NewPoWValidBlock, pwalletIn, _1, _2));
X+    g_signals.m_internals->UpdatedBlockTip.connect(boost::bind(&CValidationInterface::UpdatedBlockTip, pwalletIn, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3));
X+    g_signals.m_internals->TransactionAddedToMempool.connect(boost::bind(&CValidationInterface::TransactionAddedToMempool, pwalletIn, boost::placeholders::_1));
X+    g_signals.m_internals->BlockConnected.connect(boost::bind(&CValidationInterface::BlockConnected, pwalletIn, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3));
X+    g_signals.m_internals->BlockDisconnected.connect(boost::bind(&CValidationInterface::BlockDisconnected, pwalletIn, boost::placeholders::_1));
X+    g_signals.m_internals->TransactionRemovedFromMempool.connect(boost::bind(&CValidationInterface::TransactionRemovedFromMempool, pwalletIn, boost::placeholders::_1));
X+    g_signals.m_internals->ChainStateFlushed.connect(boost::bind(&CValidationInterface::ChainStateFlushed, pwalletIn, boost::placeholders::_1));
X+    g_signals.m_internals->Broadcast.connect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn, boost::placeholders::_1, boost::placeholders::_2));
X+    g_signals.m_internals->BlockChecked.connect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, boost::placeholders::_1, boost::placeholders::_2));
X+    g_signals.m_internals->NewPoWValidBlock.connect(boost::bind(&CValidationInterface::NewPoWValidBlock, pwalletIn, boost::placeholders::_1, boost::placeholders::_2));
X }
X 
X void UnregisterValidationInterface(CValidationInterface* pwalletIn) {
X-    g_signals.m_internals->BlockChecked.disconnect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));
X-    g_signals.m_internals->Broadcast.disconnect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn, _1, _2));
X-    g_signals.m_internals->ChainStateFlushed.disconnect(boost::bind(&CValidationInterface::ChainStateFlushed, pwalletIn, _1));
X-    g_signals.m_internals->TransactionAddedToMempool.disconnect(boost::bind(&CValidationInterface::TransactionAddedToMempool, pwalletIn, _1));
X-    g_signals.m_internals->BlockConnected.disconnect(boost::bind(&CValidationInterface::BlockConnected, pwalletIn, _1, _2, _3));
X-    g_signals.m_internals->BlockDisconnected.disconnect(boost::bind(&CValidationInterface::BlockDisconnected, pwalletIn, _1));
X-    g_signals.m_internals->TransactionRemovedFromMempool.disconnect(boost::bind(&CValidationInterface::TransactionRemovedFromMempool, pwalletIn, _1));
X-    g_signals.m_internals->UpdatedBlockTip.disconnect(boost::bind(&CValidationInterface::UpdatedBlockTip, pwalletIn, _1, _2, _3));
X-    g_signals.m_internals->NewPoWValidBlock.disconnect(boost::bind(&CValidationInterface::NewPoWValidBlock, pwalletIn, _1, _2));
X+    g_signals.m_internals->BlockChecked.disconnect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, boost::placeholders::_1, boost::placeholders::_2));
X+    g_signals.m_internals->Broadcast.disconnect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn, boost::placeholders::_1, boost::placeholders::_2));
X+    g_signals.m_internals->ChainStateFlushed.disconnect(boost::bind(&CValidationInterface::ChainStateFlushed, pwalletIn, boost::placeholders::_1));
X+    g_signals.m_internals->TransactionAddedToMempool.disconnect(boost::bind(&CValidationInterface::TransactionAddedToMempool, pwalletIn, boost::placeholders::_1));
X+    g_signals.m_internals->BlockConnected.disconnect(boost::bind(&CValidationInterface::BlockConnected, pwalletIn, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3));
X+    g_signals.m_internals->BlockDisconnected.disconnect(boost::bind(&CValidationInterface::BlockDisconnected, pwalletIn, boost::placeholders::_1));
X+    g_signals.m_internals->TransactionRemovedFromMempool.disconnect(boost::bind(&CValidationInterface::TransactionRemovedFromMempool, pwalletIn, boost::placeholders::_1));
X+    g_signals.m_internals->UpdatedBlockTip.disconnect(boost::bind(&CValidationInterface::UpdatedBlockTip, pwalletIn, boost::placeholders::_1, boost::placeholders::_2, boost::placeholders::_3));
X+    g_signals.m_internals->NewPoWValidBlock.disconnect(boost::bind(&CValidationInterface::NewPoWValidBlock, pwalletIn, boost::placeholders::_1, boost::placeholders::_2));
X }
X 
X void UnregisterAllValidationInterfaces() {
c6f56cdb6e492c70ce68100cac463e6d
echo x - bitcoingold/files/patch-src_wallet_coinselection.cpp
sed 's/^X//' >bitcoingold/files/patch-src_wallet_coinselection.cpp << '7d5b0b2b8adec0da656a07a9d755e53a'
X--- src/wallet/coinselection.cpp.orig	2024-01-08 13:09:52.442203000 +0000
X+++ src/wallet/coinselection.cpp	2024-01-08 13:13:32.625355000 +0000
X@@ -5,6 +5,8 @@
X #include <wallet/coinselection.h>
X #include <util.h>
X #include <utilmoneystr.h>
X+#include <random>
X+#include <algorithm>
X 
X // Descending order comparator
X struct {
X@@ -220,7 +222,9 @@
X     std::vector<OutputGroup> applicable_groups;
X     CAmount nTotalLower = 0;
X 
X-    random_shuffle(groups.begin(), groups.end(), GetRandInt);
X+    std::random_device rd;
X+    std::mt19937 g(rd());
X+    shuffle(groups.begin(), groups.end(), g);
X 
X     for (const OutputGroup& group : groups) {
X         if (group.m_value == nTargetValue) {
7d5b0b2b8adec0da656a07a9d755e53a
echo x - bitcoingold/pkg-descr
sed 's/^X//' >bitcoingold/pkg-descr << '006a48fa4e2762acc98643cf23e766ae'
XBitcoin Gold is a fork of the Bitcoin project with a different
Xproof-of-work algorithm which caused a bifurcation of the Bitcoin
Xblockchain. The original Bitcoin blockchain continues on unaltered,
Xbut the new fork is a distinct blockchain with the same transaction
Xhistory as Bitcoin up until the fork (block 491407) where it then
Xdiverged from it. As a result a new cryptocurrency was born.
006a48fa4e2762acc98643cf23e766ae
echo x - bitcoingold/pkg-message
sed 's/^X//' >bitcoingold/pkg-message << '8ba51c44a82845ddae1b7608615a58bd'
X[
X{ type: install
X  message: <<EOM
XThis FreeBSD port normalizes the names of some executables and config
Xfiles to be consistent with and coexist with other bitcoin forks. When
XBitcoin Gold discussion or documentation refers to bgold or bitcoin in
Xparticular contexts, think bitcoingold.
X
XWARNING: Found Berkeley DB other than 4.8; wallets opened by this build
Xwill not be portable! Be sure to use the facilities utilizing plaintext
Xformats for wallet backup/restore.
XEOM
X}
X]
8ba51c44a82845ddae1b7608615a58bd
exit

